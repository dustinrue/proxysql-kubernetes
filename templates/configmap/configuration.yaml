{{- $replicas := .Values.replicaCount | int -}}
{{- $fullname := include "proxysql.fullname" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "proxysql.fullname" . }}-config
data: 
  proxysql.cnf: |
    datadir="/var/lib/proxysql"

    admin_variables=
    {
      admin_credentials="admin:admin;radmin:radmin"
      mysql_ifaces="0.0.0.0:6032"
      cluster_username="radmin"
      cluster_password="radmin"
      cluster_check_interval_ms=200
      cluster_check_status_frequency=100
      cluster_mysql_query_rules_save_to_disk=true
      cluster_mysql_servers_save_to_disk=true
      cluster_mysql_users_save_to_disk=true
      cluster_proxysql_servers_save_to_disk=true
      cluster_mysql_query_rules_diffs_before_sync=3
      cluster_mysql_servers_diffs_before_sync=3
      cluster_mysql_users_diffs_before_sync=3
      cluster_proxysql_servers_diffs_before_sync=3
    }

    mysql_variables=
    {
      threads=2
      max_connections=2048
      default_query_delay=0
      default_query_timeout=36000000
      have_compress=true
      poll_timeout=2000
      interfaces="0.0.0.0:6033"
      default_schema="information_schema"
      stacksize=1048576
      server_version="8.0.20"
      connect_timeout_server=3000
      monitor_username="monitor"
      monitor_password="monitor"
      monitor_history=600000
      monitor_connect_interval=5000
      monitor_ping_interval=2000
      monitor_read_only_interval=1500
      monitor_read_only_timeout=500
      ping_interval_server_msec=15000
      ping_timeout_server=500
      commands_stats=true
      sessions_sort=true
      connect_retries_on_failure=10
    }

    # defines all the MySQL servers
    # mysql_servers =
    # (
    #   { address="mysql-8.default.svc.cluster.local" , port=3306 , hostgroup=1, max_connections=5000 },
    #   { address="mysql-8-slave.default.svc.cluster.local" , port=3306 , hostgroup=1, max_connections=5000 },
    # )


    # defines all the MySQL users
    mysql_users:
    (
      { username = "root" , password = "XHCO2ydDXj" , default_hostgroup = 0 , active = 1 },
      { username = "monitor" , password = "monitor" , default_hostgroup = 0 , active = 1 }
    )



    #defines MySQL Query Rules
    mysql_query_rules:
    (
      {
        rule_id=1
        active=1
        match_pattern="^SELECT .* FOR UPDATE$"
        destination_hostgroup=0
        apply=1
      },
      {
        rule_id=2
        active=1
        match_pattern="^SELECT"
        destination_hostgroup=1
        apply=1
      }
    )

    scheduler=
    (
      {
        id=1
        active=1
        interval_ms=5000
        filename="/bin/bash"
        arg1="/tmp/hg-scheduler.bash"
        arg2=""
        arg3=""
        arg4=""
        arg5=""
      }
    )


    mysql_replication_hostgroups=
    (
            {
                    writer_hostgroup=0
                    reader_hostgroup=1
                    comment="RHG1"
          }
    )


  probe-proxysql.bash: |
    #!/bin/bash
    set -e

    mbin="/usr/bin/mysql"
    lcon="-h127.0.0.1 -P6032 -uadmin -padmin"
    opts="-NB"

    hg0_avail=$($mbin $lcon $opts -e"select count(*) from runtime_mysql_servers where hostgroup_id = 0")
    exit 0
    if [[ $hg0_avail -eq 1 ]];
    then
      echo "HG0 Availability Success"
      exit 0
    else
      echo "HG0 Availability Failure - MySQL backends found: $hg0_avail"
      exit 1
    fi
  hg-scheduler.bash: |
    #!/bin/bash
    CUR_CS=$(/usr/bin/md5sum $0 | /usr/bin/awk '{print $1}')
    PRE_CS=$(/bin/cat /tmp/cs.file | /usr/bin/awk '{print $1}')

    if [[ $CUR_CS != $PRE_CS ]];
    then
      /bin/echo "Diffs detected, executing"
      /usr/bin/mysql -uadmin -padmin -h127.0.0.1 -P6032 -e"
        
        DELETE FROM proxysql_servers;

        {{ range $i, $e := until $replicas}}
        INSERT INTO proxysql_servers (hostname,port,weight,comment) 
          VALUES ('{{ $fullname }}-{{ $e }}.{{ $fullname }}-headless',6032,{{ $e }},'{{ $fullname }}-{{ $e }}.{{ $fullname }}-headless');
        {{ end }}
        SAVE PROXYSQL SERVERS TO DISK;

        LOAD MYSQL QUERY RULES TO RUNTIME;
        LOAD PROXYSQL SERVERS TO RUNTIME;
        LOAD MYSQL SERVERS TO RUNTIME;
        LOAD MYSQL USERS TO RUNTIME;

      "
      /bin/echo $CUR_CS > /tmp/cs.file
    fi

