# Default values for proxysql.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This should be at least 3
replicaCount: 3

image:
  repository: dustinrue/proxysql
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

proxysql:
  # Admin variables. See https://proxysql.com/documentation/global-variables/admin-variables/
  # These variables affect settings for ProxySQL on port 6032.
  admin:
    # The admin user will always exist but you can customize
    # the password here. This user will only be allowed from
    # 127.0.0.1. 
    adminPassword: "admin"

    # The cluster admin user is different from the admin user above. 
    # This user is allowed to connect to the cluster "remotely" and
    # will be used to coordinate and exchange settings across instances.
    # It is critical that this be a strong password to protect ProxySQL
    # configuration from tenants.
    clusterAdminUser: "radmin"
    clusterAdminPassword: "radmin"

  # MySQL variables. See https://proxysql.com/documentation/global-variables/mysql-variables/
  # These variables affect settings for ProxySQL on port 6033.
  mysql:
    # Monitoring user that should exist on all backend MySQL servers
    # and should only be allowed to connect and have no further permissions
    monitoring:
      username: "monitor"
      password: "hCbN4h2UJGW3ezUK"

    # Normal MySQL users that should exist at install time. 
    # These users must match 1:1 with backend MySQL users.
    # You can specify as many users as you want but generally
    # it is recommended you do this at runtime.
    # See https://proxysql.com/documentation/main-runtime/#mysql_users
    # and https://proxysql.com/documentation/Users-configuration/
    users:
      - username: "root"
        password: "fphzL9v8NufZqftH"

  # Should ProxySQL configuration be backed by an actual volume?
  # If set to 'false' the configuration will be stored in an emptyDir
  # and all data is lost during restarts.
  # 
  # If set to 'true' the configuration will be stored on a persistent 
  # volume using the default storage class.
  #
  # Using persistent storage is more durable
  storage:
    persistent: false
    storageClass: ""

  # Define custom configuration values here. This configuration 
  # snippet will be appended to the proxy.cnf file.
  # customConfiguration: |
  #   mysql_query_rules:
  #   (
  #     {
  #       rule_id=1
  #       active=1
  #       match_pattern="^SELECT .* FOR UPDATE$"
  #       destination_hostgroup=0
  #       apply=1
  #     },
  #     {
  #       rule_id=2
  #       active=1
  #       match_pattern="^SELECT"
  #       destination_hostgroup=1
  #       apply=1
  #     }
  #   )

  #   mysql_replication_hostgroups=
  #   (
  #     {
  #       writer_hostgroup=0
  #       reader_hostgroup=1
  #       comment="RHG1"
  #     }
  #   )
    
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

# By default we run the containers as non-root
securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 6033

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


nodeSelector: {}

tolerations: []

# Default Anti Affinity rules to prefer putting copies of
# ProxySQL onto different hosts to keep traffic balanced
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/name"
                operator: In
                values:
                  - proxysql
          topologyKey: "kubernetes.io/hostname"
